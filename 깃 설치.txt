


 깃허브

버전관리시스템과 다른 개발 및 디자이너 협업 툴  목적으로 깃허브를 한다



깃허브 사용하기 

1.레파스토리 생성 
깃허브디렉토리(=폴더)
데이터에 입력.출력 가능하다! 


내 컴퓨터 사용 환경을 조성해야되는데
git 을 들어가서 다운로드해서 설치해야한다

그리고 터미널에 들어가자 !
git bash 까지 되는지 확인하기


로컬컴퓨터에 git정보 등록 나의정보를 가지고 git 데이터 업로드 삭제

git config --global user.name ynshin100(내아이디)
$ git config --global user.email elwww18@naver.com

내정보가 잘 들어가 있는지 확인하는 방법
git config --list 이메일과아이디가 정상적으로 나오는지 확인


그리고 다시 git 을 열거나 새로 git bash를 열자 


루트 폴더 안에 있는 데이터를 깃허브로 업로드하기 위해 git 폴더를 생성 !


git init 를 한다 그러면 폴더안에 git폴더가 생김

로컬컴퓨터와 내가 연결해주고싶은 깃허브이 레파지토리를 연결

git remote add origin https://github.com/ynshin100/frontexample1026.git


아까 생성했던 git 폴더에 깃허브로 업로드하고자 하는 데이터를 이동시켜야한다.

git add .  를 해준다 .


git status 정상적인 상태인지 확인해보고싶을때

git status 해준다 .

깃폴더에업로드하기 전에버전생성에 대한 인덱스 만들기
git commit -m "1026" (내가 생성한 루트 폴더 이름 ) 

깃폴더에 데이터를 업로드하는 명령어
git push origin master 




ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

실무에서 깃 허브를 사용하는 방법

1.git push origin master 입력하기 전에

git checkout -b freshman 
(master가 아닌 freshman 이라는 브랜치 폴더를 생성해서 해당 폴더에다가 
나의 작업물을 올리기위한 사전 준비 단게 명령)


git push origin freshman 


